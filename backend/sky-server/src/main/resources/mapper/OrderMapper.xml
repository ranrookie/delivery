<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.OrderMapper">
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into orders (number, status, user_id, address_book_id,
                            order_time, checkout_time, pay_method,
                            pay_status, amount, remark,
                            phone, address, user_name, consignee,
                            estimated_delivery_time, delivery_status,
                            delivery_time, pack_amount, tableware_number,
                            tableware_status)
        values (#{number},#{status},#{userId},#{addressBookId},#{orderTime}
               ,#{checkoutTime},#{payMethod},#{payStatus},#{amount},#{remark}
               ,#{phone},#{address},#{userName},#{consignee},#{estimatedDeliveryTime}
               ,#{deliveryStatus},#{deliveryTime},#{packAmount},#{tablewareNumber}
               ,#{tablewareStatus})
    </insert>

    <select id="queryOrdersByIdSet" resultType="com.sky.entity.Orders">
        select * from orders where id in
        <foreach collection="idSet" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="pageQuery" resultType="com.sky.entity.Orders">
        select * from orders
        <where>
            <if test="userId != null">
                user_id = #{userId}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="phone != null">
                and phone like concat('%',#{phone},'%')
            </if>
            <if test="number != null">
                and number like concat('%',#{number},'%')
            </if>
            <if test="beginTime != null and endTime != null">
                and order_time between #{beginTime} and #{endTime}
            </if>
        </where>
        order by order_time desc
    </select>
    <update id="update">
        update orders
        <set>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="cancelReason != null">
                cancel_reason = #{cancelReason},
            </if>
            <if test="cancelTime != null">
                cancel_time = #{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method = #{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time = #{checkoutTime},
            </if>
            <if test="rejectionReason != null">
                rejection_reason = #{rejectionReason}
            </if>
        </set>
        where id = #{id}
    </update>
    <select id="selectByStatus" resultType="com.sky.entity.Orders">
        select * from orders where
        <if test="status != null">
            status = #{status}
        </if>
    </select>
    <select id="sumAmountByMap" resultType="java.lang.Double">
        select sum(amount) from orders
        <where>
            <if test="begin != null">
                order_time &gt; #{begin}
            </if>
            <if test="end != null">
                and order_time &lt; #{end}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>
    <select id="countByMap" resultType="java.lang.Integer">
        select count(id) from orders
        <where>
            <if test="begin != null">
                order_time &gt; #{begin}
            </if>
            <if test="end != null">
                and order_time &lt; #{end}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>
    <select id="getTop10" resultType="com.sky.dto.GoodsSalesDTO">
        select od.name,sum(od.number) number from order_detail od,orders o
        where od.order_id = o.id and o.status = 5
        <if test="begin != null">
            and o.order_time &lt; #{end}
        </if>
        <if test="end != null">
            and o.order_time &gt; #{begin}
        </if>
        group by od.name
        order by number desc
        limit 0,10
    </select>
</mapper>
